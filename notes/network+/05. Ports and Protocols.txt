Ports and Protocols

- File Transfer Protocol
	Used to transmit files from one system to another
	Can support log on or anonymous
	Uses port 21
	
	Channels
		Command Channel
		Data channel
	
	Modes
		Active - two-way communication
		Passive - used in case of firewall
	
	Can be used through CLI or web browser, or FTP client

- Secure Shell Protocol (SSH)
	Used to provide secure access, transfer files, remote commands, etc.
	Uses symmetrical shared secret keys - also supports asymmetrical and hashing
	Uses port 22
	
- SFTP
	Runs over SSH
	Also uses port 22
	
	FTPS also exists on 989/990, but it sucks.
	
- Telnet
	Remote login protocols
	Port 23
	
- SMTP
	Port 25
	Protocol for sending emails. Only sending.
	SMTP is not secure in default settings

- DNS
	Translates domain names to IPs
	Port 53, using UDP

- Dynamic Host Configuration Protocol
	Facilitates communications between endpoints on a network
	Assigns IP address, subnet mask, dafault gateway address, DNS address
	Discover, Offer, Request, Acknowledgment, Allocation
	
	Accurate IP config with fewer conflicts

	Port 67 for client, 68 for server

- Trivial File Transfer Protocol
	Simpler version of FTP, using UDP
	Port 69

- Hypertext Transfer Protocol
	Used for resource fetching from the internet
	Typically uses port 80
	Not secure by default
		However, authentication can be supported
		So can proxy and tunneling
	Sessions can be supported via cookies
	
	Steps: Open connection, send TCP message, receive response, read response, close connection
	
	Client requests and server responses

- Post Office Protocol v3
	Used to retrieve email from a remote server
	Cannot send email with this service
	Port 110 when unsecured, 995 for secured (encrypted)
	
	Client connects to server, authenticates, sends a request, retrieves response
	
	Messages are downloaded, can read offline, low server storage requirements, controllable size, easy to use.
	No access to downloaded messages from other machines

- Network Time Protocol
	Syncs clock time on a network
	Uses port 123 and UDP
		UDP here is better because it uses broadcasting - no sessions necessary
	
	Process
		Time-request exchange initiation
		Delay calculated, time adjusted, and matched
		Client updates clock in intervals, periodically checks back in
	
	Succeptible to DoS attacks
	
- Internet Message Access Protocol (IMAP)
	Accessing email on a remote server from a local client - also what POP3 does, but mail is hosted on the server and can be organized there, not just on the client
	Can be accessed from anywhere
	Port 143 unsecure, 993 secure
	
	Requires connection, uses storage space, no automatic deletion once downloaded

- Simple Network Management Protocol
	Enables devices on a network to share information
	Facilitates communication between devices with different hardware, software, etc.
	Monitors network conditions and performance
	Identifies connected devices
	
	SNMP, of course, has to be enabled
	Port 161 UDP when polling, 162 for for sending information to manager via SNMP trap

- Lightweight Directory Access Protocol (LDAP)
	Port 389
	Used to exchange directory information - e.g. user accounts being imported/exported
	
	Benefits
		Unique entries
		Multiple independent directories
	
	Disadvantages
		Requires LDAP-complient servers
		Not user friendly

- Hypertext Transfer Protocol Secure
	It's just HTTP over SSL
	Port 443
	
	Uses Public/Private Key Encryption
	
	The only real disadvantage of HTTPS is cost of a private key/slower performance

- Server Message Block (SMB)
	Provides shared access to Filed, Directories, Printers, Routers etc.
	Port 445 or 139 (super outdated - indicates a very old system)
	
	How it works
		Both parties establish connection
		Three-way handshake
		Data transport
	
	The further back you go, the more security risks
	
	Other examples of similar SMB-based programs
		Samba
		FreeNAS
		ConnectedNAS (not free)

- Syslog Analysis and Monitoring
	Enables sending data about status, events, diagnostics
	Port 514 (UDP)
	Essentially monitors states of devices on a network

- SMTP over TLS (AKA SMTPS)
	Only the specific recipients can gain access to the message
	Not an extension of SMTP, just using SMPT over TLS
	Secures at transport layer - SMTP (application layer) is unaware
	
	TLS is not actually enforced if the other server doesn't use TLS

- LDAPS
	LDAP over SSL or TLS
	TLS is effectively "new" SSL
	Port 636
	
	Requires a certificate

- Secure IMAP
	It's IMAP but secure
	TLS - 143
	SSL - 993
	
- POP3 SSL
	Implicit SSL Mode
		Assumes server supports SSL
		Connection fails if wrong
	Explicit
		Client does not assume
		Connects without SSL
		Once confirmed, secures connection
	
	Port 995
	
